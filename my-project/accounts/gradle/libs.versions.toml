# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
springBoot = "3.4.1"
springDependencyManagement = "1.1.7"
h2Database = "2.2.224"
lombok = "1.18.34"
openapi = "2.6.0"
springBootDevtools = "3.3.2"
springBootActuator = "3.3.2"
springBootJpa = "3.3.2"
springBootTest = "3.3.2"
springBootValidation = "3.3.2"
springBootWeb = "3.3.2"
springCloudDependencies = "2024.0.0"
springCloudConfig = "4.1.3"
#springCloudEurekaClient = "4.2.0"
springCloudK8sClient = "2.1.3"
springCloudOpenFeign = "4.2.0"
springCloudResilience4j = "3.2.0"
springCloudStream = "4.2.0"
#springCloudStreamBinderRabbit = "4.2.0"
springCloudStreamBinderKafka = "4.2.0"
jib = "3.4.4"
micrometerPrometheus = "1.14.2"
otel = "2.11.0"

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }

[libraries]
h2database = { module = "com.h2database:h2", version.ref = "h2Database" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
openapi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "openapi" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometerPrometheus" }
opentelemetry = { module = "io.opentelemetry.javaagent:opentelemetry-javaagent", version.ref = "otel" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "springBootDevtools" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "springBootActuator" }
spring-boot-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springBootJpa" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBootTest" }
spring-boot-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springBootValidation" }
spring-boot-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBootWeb" }
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "springCloudDependencies" }
spring-cloud-config = { module = "org.springframework.cloud:spring-cloud-starter-config", version.ref = "springCloudConfig" }
#spring-cloud-eureka-client = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client", version.ref = "springCloudEurekaClient" }
spring-cloud-k8s-client = { module = "org.springframework.cloud:spring-cloud-starter-kubernetes-discoveryclient", version.ref = "springCloudK8sClient" }
spring-cloud-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign", version.ref = "springCloudOpenFeign" }
spring-cloud-resilience4j = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j", version.ref = "springCloudResilience4j" }
spring-cloud-stream = { module = "org.springframework.cloud:spring-cloud-stream", version.ref = "springCloudStream" }
#spring-cloud-stream-binder-rabbit = { module = "org.springframework.cloud:spring-cloud-stream-binder-rabbit", version.ref = "springCloudStreamBinderRabbit" }
spring-cloud-stream-binder-kafka = { module = "org.springframework.cloud:spring-cloud-stream-binder-kafka", version.ref = "springCloudStreamBinderKafka" }
