# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
springBoot = "3.4.1"
springDependencyManagement = "1.1.7"
springBootActuatorStarter = "3.3.2"
springBootTestStarter = "3.3.2"
springCloudDependencies = "2024.0.0"
springCloudConfigStarter = "4.1.3"
springCloudEurekaServer = "4.2.0"
junitPlatformLauncher = "1.11.4"
jib = "3.4.4"
micrometerPrometheus = "1.14.2"
otel = "2.11.0"

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }

[libraries]
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "springBootActuatorStarter" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBootTestStarter" }
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "springCloudDependencies" }
spring-cloud-starter-config = { module = "org.springframework.cloud:spring-cloud-starter-config", version.ref = "springCloudConfigStarter" }
spring-cloud-eureka-server = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server", version.ref = "springCloudEurekaServer" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junitPlatformLauncher" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometerPrometheus" }
opentelemetry = { module = "io.opentelemetry.javaagent:opentelemetry-javaagent", version.ref = "otel" }
